# -*- python -*-

load(
    "//tools:drake.bzl",
    "drake_cc_binary",
    "drake_cc_library",
    "drake_cc_googletest",
)
load("//tools/lint:lint.bzl", "add_lint_tests")
load(":pick_and_place_test.bzl", "pick_and_place_test")

drake_cc_library(
    name = "kuka_pick_and_place_monolithic",
    srcs = [
        "monolithic_pick_and_place_system.cc",
    ],
    hdrs = [
        "monolithic_pick_and_place_system.h",
    ],
    deps = [
        ":pick_and_place_planner",
        "//drake/examples/kuka_iiwa_arm:iiwa_common",
        "//drake/examples/kuka_iiwa_arm:lcm_plan_interpolator",
        "//drake/examples/kuka_iiwa_arm/dev/pick_and_place:lcm_plant",
        "//drake/multibody:rigid_body_tree",
        "//drake/multibody/parsers",
        "//drake/multibody/rigid_body_plant:contact_results_to_lcm",
        "//drake/systems/framework:leaf_system",
        "//drake/systems/primitives",
    ],
)

drake_cc_library(
    name = "pick_and_place_planner",
    hdrs = [
        "state_machine_system.h",
        "pick_and_place_planner.h",
    ],
    srcs = [
        "state_machine_system.cc",
        "pick_and_place_planner.cc",
    ],
    data = [
        "//drake/examples/kuka_iiwa_arm:models",
        "//drake/manipulation/models/iiwa_description:models",
    ],
    deps = [
        "//drake/examples/kuka_iiwa_arm/pick_and_place",
        "//drake/common:find_resource",
        "//drake/common:text_logging_gflags",
        "//drake/examples/kuka_iiwa_arm:iiwa_common",
        "//drake/examples/kuka_iiwa_arm:iiwa_lcm",
        "//drake/lcm",
        "//drake/lcmtypes:iiwa",
        "//drake/lcmtypes:schunk",
        "//drake/manipulation/perception:optitrack_pose_extractor",
        "//drake/systems/framework:leaf_system",
        "//drake/systems/lcm",
        "//drake/systems/primitives:pass_through",
        "//drake/util:lcm_util",
        "@com_github_gflags_gflags//:gflags",
        "@lcmtypes_bot2_core",
        "@lcmtypes_robotlocomotion",
    ],
)

drake_cc_binary(
    name = "monolithic_pick_and_place_demo",
    srcs = ["monolithic_pick_and_place_demo.cc"],
    data = [
        "//drake/examples/kuka_iiwa_arm:models",
        "//drake/examples/kuka_iiwa_arm/dev/pick_and_place:configuration",
        "//drake/manipulation/models/iiwa_description:models",
        "//drake/manipulation/models/wsg_50_description:models",
    ],
    deps = [
        ":kuka_pick_and_place_monolithic",
        "//drake/examples/kuka_iiwa_arm/dev/pick_and_place:pick_and_place_configuration_parsing",
        "//drake/common:find_resource",
        "//drake/common:text_logging_gflags",
        "//drake/examples/kuka_iiwa_arm:iiwa_common",
        "//drake/examples/kuka_iiwa_arm:iiwa_lcm",
        "//drake/lcm",
        "//drake/lcmtypes:iiwa",
        "//drake/systems/analysis:simulator",
        "@com_github_gflags_gflags//:gflags",
        "@lcmtypes_bot2_core",
    ],
)

drake_cc_googletest(
    name = "monolithic_pick_and_place_system_test",
    size = "medium",
    deps = [
        ":kuka_pick_and_place_monolithic",
        "//drake/common/test_utilities:eigen_matrix_compare",
        "//drake/systems/analysis:simulator",
        "//drake/systems/framework",
    ],
)

# TODO(sam.creasey) Re-enable this test once it is not so sensitive.
pick_and_place_test(
    name = "pick_and_place_scenario_1",
    # TODO(sam.creasey) This should be target 1, but that requries
    # offsetting the gripper location to deal with the larger box,
    # which isn't currently supported.
    args = [
        "--target=2",
        "--orientation=1.57",
        "--start-position=0",
        "--end-position=2",
        # TODO(sam.creasey) This is an artisanally crafted timestep
        # intended to dodge sensitive dependence on initial conditions
        # in the IK planner.  Depending on slight changes in the arm's
        # configration after lifting the item from the pick, the IK
        # planner (particularly when running under SNOPT) can produce
        # radically different results.  This value produces usable
        # (but different!) results on Mac vs. Linux builds.  See #6811
        # for more information.
        "--dt 6e-4",
    ],
    # TODO(sam.creasey) IPOPT doesn't find a reasonable solution for
    # one of the steps in this demo.  We should see if this improves
    # when #3128 is fixed.
    tags = [
        "manual",  # Disables this brittle test from being run in CI.
        "snopt",
    ],
)

pick_and_place_test(
    name = "pick_and_place_scenario_2",
    args = [
        "--target=2",
        "--orientation=-1.57",
        "--start-position=4",
        "--end-position=2",
        # The smaller timestep is necessary to keep the box from
        # sliding out of the target region when bumped by the
        # gripper after being placed.
        "--dt 5e-4",
    ],
    # TODO(sam.creasey) IPOPT doesn't find a reasonable solution for
    # one of the steps in this demo.  We should see if this improves
    # when #3128 is fixed.
    tags = ["snopt"],
)

pick_and_place_test(
    name = "pick_and_place_scenario_3",
    args = [
        "--target=2",
        "--orientation=-1.57",
        "--start-position=4",
        "--end-position=1",
        # The smaller timestep is necessary to keep
        # the box from bouncing out of the target
        # region when placed.
        "--dt 5e-4",
    ],
    # TODO(sam.creasey) IPOPT doesn't find a reasonable solution for
    # one of the steps in this demo.  We should see if this improves
    # when #3128 is fixed.
    tags = ["snopt"],
)

pick_and_place_test(
    name = "pick_and_place_scenario_4",
    # TODO(sam.creasey) This should be a smaller rectangular target.
    args = [
        "--target=2",
        "--start-position=1",
        "--end-position=3",
        # The smaller timestep is necessary to keep
        # the box from bouncing out of the target
        # region when placed.
        "--dt 5e-4",
    ],
)

# TODO(sam.creasey) Re-enable this test once it is not so sensitive.
pick_and_place_test(
    name = "pick_and_place_scenario_5",
    # TODO(sam.creasey) This should be a smaller cylindrical target,
    # but we don't currently have a cylinder with good collision
    # geometry.
    args = [
        "--target=0",
        "--start-position=2",
        "--end-position=0",
    ],
    tags = [
        "manual",  # Disables this brittle test from being run in CI.
    ],
)

add_lint_tests()
